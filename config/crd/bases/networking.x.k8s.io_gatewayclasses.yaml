
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: gatewayclasses.networking.x.k8s.io
spec:
  group: networking.x.k8s.io
  names:
    kind: GatewayClass
    listKind: GatewayClassList
    plural: gatewayclasses
    singular: gatewayclass
  scope: Cluster
  validation:
    openAPIV3Schema:
      description: "GatewayClass describes a class of Gateways available to the user
        for creating Gateway resources. \n GatewayClass is a Cluster level resource.
        \n Support: Core."
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Spec for this GatewayClass.
          properties:
            controller:
              description: "Controller is a domain/path string that indicates the
                controller that managing Gateways of this class. \n Example: \"acme.io/gateway-controller\".
                \n This field is not mutable and cannot be empty. \n The format of
                this field is DOMAIN \"/\" PATH, where DOMAIN and PATH are valid Kubernetes
                names (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                \n Support: Core"
              type: string
            parameters:
              description: "ParametersRef is a controller specific resource containing
                the configuration parameters corresponding to this class. This is
                optional if the controller does not require any additional configuration.
                \n Valid resources for reference are up to the Controller. Examples
                include \"configmap\" (using the empty string to indicate the core
                API group) or a custom resource (CRD). \n Support: Custom"
              properties:
                group:
                  description: Group is the group of the referent.  The empty string
                    represents the core API group.
                  type: string
                name:
                  description: Name is the name of the referent.
                  type: string
                resource:
                  description: Resource is the resource of the referent.
                  type: string
              required:
              - group
              - name
              - resource
              type: object
            schedulingPolicy:
              description: "SchedulingPolicy enables explicit control over the scheduling
                of a Gateway deployment. \n If unset, defaults are used. See SchedulingPolicy
                for more details. \n Support: Extended"
              properties:
                nodeSelector:
                  description: "NodeSelector is the node selector applied to a gateway.
                    \n If unset, the default is: \n   beta.kubernetes.io/os: linux
                    \  node-role.kubernetes.io/worker: '' \n If set, the specified
                    selector is used and replaces the default. \n See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                    for additional background on node selector."
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                tolerations:
                  description: "Tolerations is a list of tolerations applied to a
                    gateway. \n The default is an empty list. \n See https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
                    for additional background on taints and tolerations."
                  items:
                    description: The pod this Toleration is attached to tolerates
                      any taint that matches the triple <key,value,effect> using the
                      matching operator <operator>.
                    properties:
                      effect:
                        description: Effect indicates the taint effect to match. Empty
                          means match all taint effects. When specified, allowed values
                          are NoSchedule, PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: Key is the taint key that the toleration applies
                          to. Empty means match all taint keys. If the key is empty,
                          operator must be Exists; this combination means to match
                          all values and all keys.
                        type: string
                      operator:
                        description: Operator represents a key's relationship to the
                          value. Valid operators are Exists and Equal. Defaults to
                          Equal. Exists is equivalent to wildcard for value, so that
                          a pod can tolerate all taints of a particular category.
                        type: string
                      tolerationSeconds:
                        description: TolerationSeconds represents the period of time
                          the toleration (which must be of effect NoExecute, otherwise
                          this field is ignored) tolerates the taint. By default,
                          it is not set, which means tolerate the taint forever (do
                          not evict). Zero and negative values will be treated as
                          0 (evict immediately) by the system.
                        format: int64
                        type: integer
                      value:
                        description: Value is the taint value the toleration matches
                          to. If the operator is Exists, the value should be empty,
                          otherwise just a regular string.
                        type: string
                    type: object
                  type: array
              type: object
          required:
          - controller
          type: object
        status:
          description: Status of the GatewayClass.
          properties:
            conditions:
              description: Conditions is the current status from the controller for
                this GatewayClass.
              items:
                description: "GatewayClassCondition contains the details for the current
                  condition of this GatewayClass. \n Support: Core, unless otherwise
                  specified."
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the time of the last change
                      to this condition.
                    format: date-time
                    type: string
                  message:
                    description: Message is a human readable reason for last transition.
                    type: string
                  reason:
                    description: "Reason is a machine consumable string for the last
                      transition. It should be a one-word, CamelCase string. Reason
                      will be defined by the controller. \n Support: Custom; values
                      will be controller-specific."
                    type: string
                  status:
                    description: Status of this condition.
                    type: string
                  type:
                    description: Type of this condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
